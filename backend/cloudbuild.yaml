# Unified CI/CD for backend components
# - Cloud Run: preprocess-svc (FastAPI)
# - Cloud Functions Gen2: sign-upload-url, chat

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _PROJECT_ID: ai-data-analyser
  _REGION: europe-west4
  _BUCKET: ai-data-analyser-files

timeout: "1200s"

steps:
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: Configure project & APIs
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        PROJECT_ID="${_PROJECT_ID}"
        gcloud config set project "$PROJECT_ID"
        gcloud services enable \
          run.googleapis.com \
          eventarc.googleapis.com \
          cloudbuild.googleapis.com \
          artifactregistry.googleapis.com \
          cloudfunctions.googleapis.com \
          firestore.googleapis.com \
          storage.googleapis.com \
          iamcredentials.googleapis.com \
          pubsub.googleapis.com \
          --quiet

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: Deploy preprocess-svc
    dir: backend
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        PROJECT_ID="${_PROJECT_ID}"
        REGION="${_REGION}"
        BUCKET="${_BUCKET}"
        PROJECT_NUMBER=$(gcloud projects describe "$PROJECT_ID" --format="value(projectNumber)")
        SA="${PROJECT_NUMBER}-compute@developer.gserviceaccount.com"
        gcloud run deploy preprocess-svc \
          --region="$REGION" \
          --source="run-preprocess" \
          --service-account="$SA" \
          --set-build-env-vars="GOOGLE_PYTHON_VERSION=3.12" \
          --set-env-vars="FILES_BUCKET=$BUCKET,GCP_PROJECT=$PROJECT_ID,TTL_DAYS=1" \
          --no-allow-unauthenticated
        # IAM (idempotent)
        gcloud projects add-iam-policy-binding "$PROJECT_ID" \
          --member="serviceAccount:$SA" \
          --role="roles/datastore.user" || true
        gcloud storage buckets add-iam-policy-binding "gs://$BUCKET" \
          --member="serviceAccount:$SA" \
          --role="roles/storage.objectAdmin" || true
        gcloud iam service-accounts add-iam-policy-binding "$SA" \
          --member="serviceAccount:$SA" \
          --role="roles/iam.serviceAccountTokenCreator" || true
        gcloud run services add-iam-policy-binding preprocess-svc \
          --region="$REGION" \
          --member="serviceAccount:$SA" \
          --role="roles/run.invoker" || true
        # Eventarc trigger ensure
        TRIGGER="preprocess-trigger"
        if gcloud eventarc triggers describe "$TRIGGER" --location="$REGION" >/dev/null 2>&1; then
          gcloud eventarc triggers update "$TRIGGER" \
            --location="$REGION" \
            --event-filters="type=google.cloud.storage.object.v1.finalized" \
            --event-filters="bucket=$BUCKET" \
            --destination-run-service="preprocess-svc" \
            --destination-run-path="/eventarc" \
            --destination-run-region="$REGION" \
            --service-account="$SA"
        else
          gcloud projects add-iam-policy-binding "$PROJECT_ID" \
            --member="serviceAccount:service-$PROJECT_NUMBER@gs-project-accounts.iam.gserviceaccount.com" \
            --role="roles/pubsub.publisher" || true
          gcloud eventarc triggers create "$TRIGGER" \
            --location="$REGION" \
            --event-filters="type=google.cloud.storage.object.v1.finalized" \
            --event-filters="bucket=$BUCKET" \
            --destination-run-service="preprocess-svc" \
            --destination-run-path="/eventarc" \
            --destination-run-region="$REGION" \
            --service-account="$SA"
        fi

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: Deploy sign-upload-url (Gen2)
    dir: backend
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        PROJECT_ID="${_PROJECT_ID}"
        REGION="${_REGION}"
        BUCKET="${_BUCKET}"
        PROJECT_NUMBER=$(gcloud projects describe "$PROJECT_ID" --format="value(projectNumber)")
        SA="${PROJECT_NUMBER}-compute@developer.gserviceaccount.com"
        gcloud functions deploy sign-upload-url \
          --gen2 \
          --runtime=python312 \
          --region="$REGION" \
          --source="functions/sign_upload_url" \
          --entry-point="sign_upload_url" \
          --trigger-http \
          --allow-unauthenticated \
          --service-account="$SA" \
          --set-env-vars="FILES_BUCKET=$BUCKET,GCP_PROJECT=$PROJECT_ID,TTL_DAYS=1,RUNTIME_SERVICE_ACCOUNT=$SA"

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: Deploy chat (Gen2)
    dir: backend
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        PROJECT_ID="${_PROJECT_ID}"
        REGION="${_REGION}"
        PROJECT_NUMBER=$(gcloud projects describe "$PROJECT_ID" --format="value(projectNumber)")
        SA="${PROJECT_NUMBER}-compute@developer.gserviceaccount.com"
        gcloud functions deploy chat \
          --gen2 \
          --runtime=python312 \
          --region="$REGION" \
          --source="functions/orchestrator" \
          --entry-point="chat" \
          --trigger-http \
          --allow-unauthenticated \
          --service-account="$SA"

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: Output endpoints
    dir: backend
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        REGION="${_REGION}"
        echo "RUN URL:" $(gcloud run services describe preprocess-svc --region="$REGION" --format="value(status.url)" || true)
        echo "SIGN URL:" $(gcloud functions describe sign-upload-url --gen2 --region="$REGION" --format="value(url)" || true)
        echo "CHAT URL:" $(gcloud functions describe chat --gen2 --region="$REGION" --format="value(url)" || true)
